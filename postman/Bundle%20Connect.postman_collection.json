{
	"variables": [],
	"info": {
		"name": "Bundle Connect",
		"_postman_id": "1217eab5-10ab-059f-f0d6-1e613238833c",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "3rd Party Login Tests",
			"description": "",
			"item": [
				{
					"name": "JWT: Get 3rd Party Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Token expiry is in future\"] = !! data.data && !! data.data.exp && data.data.exp > Date.now()/1000;\ntests[\"Token expiry is less than 2 hours in the future\"] = !! data.data && !! data.data.exp && data.data.exp < Date.now()/1000 + 60 * 60 * 2;\ntests[\"Sub is not null\"] = !!data.data && !! data.data.sub;\ntests[\"No user returned\"] = !!data.data && ! data.data.user;\ntests[\"Typ is third-party\"] = !! data.data && !! data.data.typ && data.data.typ === \"third-party\";\n\nif (!!data.token) {\n    postman.setGlobalVariable(\"token\", data.token);\n}\n\nif (!!data.data && !!data.data.sub) {\n    postman.setGlobalVariable(\"third-party-sub\", data.data.sub);\n}"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/third",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "JWT: GET anon token - no user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Token expiry is in future\"] = !! data.data && !!data.data.exp && data.data.exp > Date.now()/1000;\ntests[\"Token expiry is less than 2 hours in the future\"] = !! data.data && !!data.data.exp && data.data.exp < Date.now()/1000 + 60 * 60 * 2;\ntests[\"Token is not the same as previous\"] = !!data.token && data.token != postman.getGlobalVariable(\"token\");\ntests[\"Sub is not null\"] = !! data.data && !! data.data.sub;\n\nif (!data.data || !data.data.user) {\n    tests[\"Typ is third-party\"] = !!data.data && !!data.data.typ && data.data.typ === \"third-party\";\n    tests[\"Sub matches third-party sub\"] = !! data.data && !!data.data.sub && data.data.sub === postman.getGlobalVariable(\"third-party-sub\");\n} else {\n    tests[\"Login matches auth user\"] = !!data.data.user.email === environment.auth_user;\n    tests[\"Sub matches returned user\"] = !!data.data && !!data.data.sub && data.data.sub === data.data.user.uuid;\n}\n\npostman.setGlobalVariable(\"old_token\", postman.getGlobalVariable(\"token\"));\n\nif (!!data.token) {\n    postman.setGlobalVariable(\"token\", data.token);\n}"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/token",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "JWT Login Tests",
			"description": "",
			"item": [
				{
					"name": "JWT: Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Login matches auth user\"] = !!data.data && !!data.data.user && !!data.data.user.email && data.data.user.email === environment.auth_user;\ntests[\"Token expiry is in future\"] = !!data.data && !!data.data.exp && data.data.exp > Date.now()/1000;\ntests[\"Token expiry is less than 2 hours in the future\"] = !!data.data && !!data.data.exp && data.data.exp < Date.now()/1000 + 60 * 60 * 2;\ntests[\"Sub is not null\"] = !!data.data && !! data.data.sub;\ntests[\"Sub matches returned user\"] = !!data.data && !!data.data.sub && data.data.sub === data.data.user.uuid;\n\nif (!!data.token) {\n    postman.setGlobalVariable(\"token\", data.token);\n}"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setGlobalVariable(\"basicToken\", btoa(environment.auth_user+\":\"+environment.auth_password));"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/login",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": "Login to API - get JWT token"
					},
					"response": []
				},
				{
					"name": "JWT: Login again",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "try {\n    var data = JSON.parse(responseBody);\n    \n    tests[\"Status code is 200\"] = responseCode.code === 200;\n    tests[\"Login matches auth user\"] = !!data.data && !!data.data.user && !!data.data.user.email && data.data.user.email === environment.auth_user;\n    tests[\"Token expiry is in future\"] = !!data.data && !!data.data.exp && data.data.exp > Date.now()/1000;\n    tests[\"Token expiry is less than 2 hours in the future\"] = !!data.data && !!data.data.exp && data.data.exp < Date.now()/1000 + 60 * 60 * 2;\n    tests[\"Sub is not null\"] = !!data.data && !! data.data.sub;\n    tests[\"Sub matches returned user\"] = !!data.data && !!data.data.sub && data.data.sub === data.data.user.uuid;\n    if (!!data.token) {\n        postman.setGlobalVariable(\"token\", data.token);\n    }\n} catch (e) {\n\ttests[e] = false;\n}"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setGlobalVariable(\"basicToken\", btoa(environment.auth_user+\":\"+environment.auth_password));"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/login",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": "Login to API - get JWT token"
					},
					"response": []
				},
				{
					"name": "JWT: Login wrong password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\ntests[\"Error message matches apiary\"] = !!data.message && data.message === \"Your username or password is invalid\";"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": "postman.setGlobalVariable(\"basicToken\", btoa(environment.auth_user+\":wrong\"));"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/login",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "JWT: Refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Token is not the same as previous\"] = !!data.token && data.token != postman.getGlobalVariable(\"token\");\ntests[\"Token expiry is in future\"] = !!data.data && !!data.data.exp && data.data.exp > Date.now()/1000;\npostman.setGlobalVariable(\"old_token\", postman.getGlobalVariable(\"token\"));\nif (!!data.token) {\n    postman.setGlobalVariable(\"token\", data.token);\n}"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/refresh",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": "Refresh JWT token"
					},
					"response": []
				},
				{
					"name": "JWT: Old Token Invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "tests[\"Response code is 401\"] = responseCode.code === 401;"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/token",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{old_token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "JWT: GET anon token - user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": "var data = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Login matches auth user\"] = !!data.data && !!data.data.user && !!data.data.user.email && data.data.user.email === environment.auth_user;\ntests[\"Token expiry is in future\"] = !!data.data && !!data.data.exp && data.data.exp > Date.now()/1000;\ntests[\"Token expiry is less than 2 hours in the future\"] = !!data.data && !!data.data.exp && data.data.exp < Date.now()/1000 + 60 * 60 * 2;\ntests[\"Sub is not null\"] = !!data.data && !! data.data.sub;\ntests[\"Sub matches returned user\"] = !!data.data && !!data.data.sub && data.data.sub === data.data.user.uuid;\n\ntests[\"Token is not the same as previous\"] = !!data.token && data.token != postman.getGlobalVariable(\"token\");\n\npostman.setGlobalVariable(\"old_token\", postman.getGlobalVariable(\"token\"));\nif (!!data.token) {\n    postman.setGlobalVariable(\"token\", data.token);\n}"
							}
						}
					],
					"request": {
						"url": "http://local.api.bundleconnect.com.au/api/auth/jwt/token",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}